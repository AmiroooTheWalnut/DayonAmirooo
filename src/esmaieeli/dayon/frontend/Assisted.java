/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package esmaieeli.dayon.frontend;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import esmaieeli.dayon.backend.AssistedConfig;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import mpo.dayon.assisted.gui.AssistedStartAction;
import mpo.dayon.assisted.gui.AssistedStopAction;
import mpo.dayon.common.utils.SystemUtilities;

/**
 *
 * @author Amir Mohammad Esmaieeli Sikaroudi
 */
public class Assisted extends javax.swing.JFrame {

    public mpo.dayon.assisted.gui.Assisted assisted;

    public TimerTask runTask;
    public Timer simulationTimer;

    public boolean isTimerRunning = false;

    public int refreshTime;

    public String ip;
    public String port;

    /**
     * Creates new form Assistant
     */
    public Assisted() {
        initComponents();
        simulationTimer = new Timer();
        SwingUtilities.invokeLater(() -> launchAssisted("", ""));
        try {
            checkDefaults();
        } catch (Exception ex) {
//            System.out.println(ex.toString());
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton6.setText("Automation settings");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText("Status:");

        jToggleButton1.setText("Start automation");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("NULL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jToggleButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (jToggleButton1.isSelected() == true) {
            jToggleButton1.setText("Stop automation");
            simulationTimer = new Timer();
            runTask = new TimerTask() {
                @Override
                public void run() {
                    isTimerRunning = true;
                    if (assisted.frame.connected == false) {
                        jLabel2.setText("NOT CONNECTED!");
                        if (ip != null && port != null) {
                            if (SystemUtilities.isValidIpAddressOrHostName(ip) && SystemUtilities.isValidPortNumber(port)) {
                                if (!assisted.frame.statusBar.message.getText().equals("connected")) {
                                    if (assisted.frame.statusBar.message.getText().equals("connecting")) {
                                        ((AssistedStopAction) (assisted.frame.stopAction)).actionPerformed(null);
                                    }
                                    ((AssistedStartAction) (assisted.frame.startAction)).myActionPerformed(ip, port);
                                }
                            } else {
                                jLabel2.setText("INVALID HOST OR PORT!");
                            }
                        }
                    } else {
                        jLabel2.setText("CONNECTED!");
                    }
                }
            };
            simulationTimer.schedule(runTask, 0, refreshTime * 1000);
        } else {
            jToggleButton1.setText("Start automation");
            simulationTimer.cancel();
            isTimerRunning = false;
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        AutomationDialog automationDialog = new AutomationDialog(this, true);
        if (ip != null) {
            automationDialog.jTextField1.setText(ip);
        }
        if (port != null) {
            automationDialog.jTextField2.setText(port);
        }
        if (refreshTime != 0) {
            automationDialog.jSpinner1.setValue(refreshTime);
        }
        automationDialog.setVisible(true);
        checkDefaults();
        if (isTimerRunning == true) {
            jToggleButton1ActionPerformed(null);
            jToggleButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void launchAssisted(String assistantHost, String assistantPort) {
        System.setProperty("dayon.application.name", "dayon_assisted");
        assisted = new mpo.dayon.assisted.gui.Assisted();
        assisted.configure();
        assisted.start(assistantHost, assistantPort);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Assisted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Assisted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Assisted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Assisted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Assisted().setVisible(true);
            }
        });
    }

    public void checkDefaults() {
        File file = new File("./defaults.conf");
        if (file.exists() == true) {
            Gson gson = new GsonBuilder().setPrettyPrinting().create();
            FileReader in;
            try {
                in = new FileReader("./defaults.conf");
                BufferedReader br = new BufferedReader(in);
                StringBuilder sb = new StringBuilder();

                String line;
                while ((line = br.readLine()) != null) {
                    sb.append(line).append("\n");
                }
                in.close();

                AssistedConfig result = gson.fromJson(sb.toString(), AssistedConfig.class);

                refreshTime = result.reconnectDelaySeconds;
                ip = result.ip;
                port = result.port;

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Assisted.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Assisted.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
